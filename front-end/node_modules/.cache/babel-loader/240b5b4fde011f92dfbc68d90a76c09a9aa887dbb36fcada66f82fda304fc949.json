{"ast":null,"code":"var _jsxFileName = \"/Users/zeynepbusesevincel/Desktop/csi2532_database_project/front-end/src/pages/HotelInfo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom'; // Assuming you're using React Router for routing\nimport RBC from '../components/RBC'; // Verify this is the correct path\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HotelInfo = () => {\n  _s();\n  const {\n    hotelName\n  } = useParams(); // Grab hotelName from URL if using React Router\n  const [hotelDetails, setHotelDetails] = useState(null);\n  const [showPopup, setShowPopup] = useState(false);\n  const [selectedRoom, setSelectedRoom] = useState(null);\n  useEffect(() => {\n    const fetchHotelDetails = async () => {\n      try {\n        // Note: Adjusted to a generic fetch call, ensure this matches your actual API\n        const response = await fetch('localhost:8080/findAndReserve/roomsByHotel');\n        if (!response.ok) throw new Error('Failed to fetch hotel details');\n        const data = await response.json();\n        let foundHotel = null;\n\n        // Assuming your API returns an array or an object with a structure that includes multiple hotel chains\n        Object.values(data).forEach(chains => {\n          chains.forEach(chain => {\n            const hotel = chain.hotels.find(h => h.name === hotelName);\n            if (hotel) {\n              foundHotel = {\n                ...hotel,\n                chainName: chain.chainName\n              };\n            }\n          });\n        });\n        if (!foundHotel) throw new Error('Hotel not found');\n        setHotelDetails(foundHotel);\n      } catch (error) {\n        console.error(error.message);\n      }\n    };\n    fetchHotelDetails();\n  }, [hotelName]);\n  const handleBookNow = room => {\n    setSelectedRoom(room);\n    setShowPopup(true);\n  };\n  if (!hotelDetails) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading hotel information...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/about-us\",\n      className: \"back-to-results-link\",\n      children: \"\\u2190 Back to Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [hotelDetails.hotelName, \" - \", hotelDetails.chainName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), hotelDetails.rooms && hotelDetails.rooms.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: hotelDetails.rooms.map(room => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [room.type, \" - $\", room.price, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleBookNow(room),\n          children: \"Book Now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)]\n      }, room.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No available rooms.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }, this), showPopup && selectedRoom && /*#__PURE__*/_jsxDEV(RBC, {\n      room: selectedRoom,\n      onClose: () => setShowPopup(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(HotelInfo, \"y6A2g/FzFWNkY6C+F7qgQniX1EQ=\", false, function () {\n  return [useParams];\n});\n_c = HotelInfo;\nexport default HotelInfo;\nvar _c;\n$RefreshReg$(_c, \"HotelInfo\");","map":{"version":3,"names":["React","useState","useEffect","Link","useParams","RBC","jsxDEV","_jsxDEV","HotelInfo","_s","hotelName","hotelDetails","setHotelDetails","showPopup","setShowPopup","selectedRoom","setSelectedRoom","fetchHotelDetails","response","fetch","ok","Error","data","json","foundHotel","Object","values","forEach","chains","chain","hotel","hotels","find","h","name","chainName","error","console","message","handleBookNow","room","children","fileName","_jsxFileName","lineNumber","columnNumber","to","className","rooms","length","map","type","price","onClick","id","onClose","_c","$RefreshReg$"],"sources":["/Users/zeynepbusesevincel/Desktop/csi2532_database_project/front-end/src/pages/HotelInfo.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom'; // Assuming you're using React Router for routing\nimport RBC from '../components/RBC'; // Verify this is the correct path\n\nconst HotelInfo = () => {\n  const { hotelName } = useParams(); // Grab hotelName from URL if using React Router\n  const [hotelDetails, setHotelDetails] = useState(null);\n  const [showPopup, setShowPopup] = useState(false);\n  const [selectedRoom, setSelectedRoom] = useState(null);\n\n  useEffect(() => {\n    const fetchHotelDetails = async () => {\n      try {\n        // Note: Adjusted to a generic fetch call, ensure this matches your actual API\n        const response = await fetch('localhost:8080/findAndReserve/roomsByHotel');\n        if (!response.ok) throw new Error('Failed to fetch hotel details');\n\n        const data = await response.json();\n        let foundHotel = null;\n\n        // Assuming your API returns an array or an object with a structure that includes multiple hotel chains\n        Object.values(data).forEach(chains => {\n          chains.forEach(chain => {\n            const hotel = chain.hotels.find(h => h.name === hotelName);\n            if (hotel) {\n              foundHotel = { ...hotel, chainName: chain.chainName };\n            }\n          });\n        });\n\n        if (!foundHotel) throw new Error('Hotel not found');\n        setHotelDetails(foundHotel);\n      } catch (error) {\n        console.error(error.message);\n      }\n    };\n\n    fetchHotelDetails();\n  }, [hotelName]);\n\n  const handleBookNow = (room) => {\n    setSelectedRoom(room);\n    setShowPopup(true);\n  };\n\n  if (!hotelDetails) {\n    return <div>Loading hotel information...</div>;\n  }\n\n  return (\n    <div>\n      <Link to=\"/about-us\" className=\"back-to-results-link\">‚Üê Back to Results</Link>\n      <h1>{hotelDetails.hotelName} - {hotelDetails.chainName}</h1>\n      {hotelDetails.rooms && hotelDetails.rooms.length > 0 ? (\n        <ul>\n          {hotelDetails.rooms.map((room) => (\n            <li key={room.id}>\n              {room.type} - ${room.price}\n              <button onClick={() => handleBookNow(room)}>Book Now</button>\n            </li>\n          ))}\n        </ul>\n      ) : <p>No available rooms.</p>}\n      \n      {showPopup && selectedRoom && (\n        <RBC\n          room={selectedRoom}\n          onClose={() => setShowPopup(false)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default HotelInfo;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}