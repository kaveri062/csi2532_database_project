{"ast":null,"code":"var _jsxFileName = \"/Users/zeynepbusesevincel/Desktop/csi2532_database_project/front-end/src/components/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [userType, setUserType] = useState('');\n  const [full_name, setUserName] = useState('');\n  useEffect(() => {\n    // Optionally, initialize authentication state from local/session storage\n    const storedAuth = sessionStorage.getItem('authData');\n    if (storedAuth) {\n      const authData = JSON.parse(storedAuth);\n      setIsAuthenticated(authData.isAuthenticated);\n      setUserType(authData.userType);\n      setUserName(authData.full_name);\n    }\n  }, []);\n  const signIn = (userType, full_name) => {\n    setIsAuthenticated(true);\n    setUserType(userType);\n    setUserName(full_name);\n    // Optionally, store authentication state in local/session storage\n    sessionStorage.setItem('authData', JSON.stringify({\n      isAuthenticated: true,\n      userType,\n      full_name\n    }));\n  };\n  const signOut = () => {\n    setIsAuthenticated(false);\n    setUserType('');\n    setUserName('');\n    // Clear stored authentication state\n    sessionStorage.removeItem('authData');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      userType,\n      full_name,\n      signIn,\n      signOut\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"yK83q8SbNSjBSQkY1MHhPfoO+lU=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","isAuthenticated","setIsAuthenticated","userType","setUserType","full_name","setUserName","storedAuth","sessionStorage","getItem","authData","JSON","parse","signIn","setItem","stringify","signOut","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/zeynepbusesevincel/Desktop/csi2532_database_project/front-end/src/components/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => useContext(AuthContext);\n\nexport const AuthProvider = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [userType, setUserType] = useState('');\n  const [full_name, setUserName] = useState('');\n\n  useEffect(() => {\n    // Optionally, initialize authentication state from local/session storage\n    const storedAuth = sessionStorage.getItem('authData');\n    if (storedAuth) {\n      const authData = JSON.parse(storedAuth);\n      setIsAuthenticated(authData.isAuthenticated);\n      setUserType(authData.userType);\n      setUserName(authData.full_name);\n    }\n  }, []);\n\n  const signIn = (userType, full_name) => {\n    setIsAuthenticated(true);\n    setUserType(userType);\n    setUserName(full_name);\n    // Optionally, store authentication state in local/session storage\n    sessionStorage.setItem('authData', JSON.stringify({ isAuthenticated: true, userType, full_name }));\n  };\n\n  const signOut = () => {\n    setIsAuthenticated(false);\n    setUserType('');\n    setUserName('');\n    // Clear stored authentication state\n    sessionStorage.removeItem('authData');\n  };\n\n  return (\n    <AuthContext.Provider value={{ isAuthenticated, userType, full_name, signIn, signOut }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMP,UAAU,CAACK,WAAW,CAAC;AAAA;AAACE,EAAA,CAAxCD,OAAO;AAEpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,SAAS,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMe,UAAU,GAAGC,cAAc,CAACC,OAAO,CAAC,UAAU,CAAC;IACrD,IAAIF,UAAU,EAAE;MACd,MAAMG,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACL,UAAU,CAAC;MACvCL,kBAAkB,CAACQ,QAAQ,CAACT,eAAe,CAAC;MAC5CG,WAAW,CAACM,QAAQ,CAACP,QAAQ,CAAC;MAC9BG,WAAW,CAACI,QAAQ,CAACL,SAAS,CAAC;IACjC;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,MAAM,GAAGA,CAACV,QAAQ,EAAEE,SAAS,KAAK;IACtCH,kBAAkB,CAAC,IAAI,CAAC;IACxBE,WAAW,CAACD,QAAQ,CAAC;IACrBG,WAAW,CAACD,SAAS,CAAC;IACtB;IACAG,cAAc,CAACM,OAAO,CAAC,UAAU,EAAEH,IAAI,CAACI,SAAS,CAAC;MAAEd,eAAe,EAAE,IAAI;MAAEE,QAAQ;MAAEE;IAAU,CAAC,CAAC,CAAC;EACpG,CAAC;EAED,MAAMW,OAAO,GAAGA,CAAA,KAAM;IACpBd,kBAAkB,CAAC,KAAK,CAAC;IACzBE,WAAW,CAAC,EAAE,CAAC;IACfE,WAAW,CAAC,EAAE,CAAC;IACf;IACAE,cAAc,CAACS,UAAU,CAAC,UAAU,CAAC;EACvC,CAAC;EAED,oBACEvB,OAAA,CAACC,WAAW,CAACuB,QAAQ;IAACC,KAAK,EAAE;MAAElB,eAAe;MAAEE,QAAQ;MAAEE,SAAS;MAAEQ,MAAM;MAAEG;IAAQ,CAAE;IAAAjB,QAAA,EACpFA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACvB,GAAA,CArCWF,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}