{"ast":null,"code":"var _jsxFileName = \"/Users/zeynepbusesevincel/Desktop/csi2532_database_project/front-end/src/pages/FindReserve.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport RoomCard from '../components/RoomCard'; // Adjust according to your project structure\nimport './FindReserve.css'; // Adjust according to your project structure\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FindReserve = () => {\n  _s();\n  const [rooms, setRooms] = useState([]);\n  useEffect(() => {\n    async function fetchRooms() {\n      try {\n        const response = await fetch('http://localhost:8080/findAndReserve/rooms', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            \"chainName\": \"Maple Leaf Resorts\",\n            \"location\": \"BC\",\n            \"capacity\": 2,\n            \"minPrice\": 300,\n            \"maxPrice\": 750,\n            \"rating\": 4\n          })\n        });\n        if (!response.ok) throw new Error('Network response was not ok');\n        const data = await response.json();\n        setRooms(data); // Adjust this line if the structure of response is different\n      } catch (error) {\n        console.error(\"Error fetching rooms:\", error);\n      }\n    }\n    fetchRooms();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"find-reserve-container\",\n    children: rooms.map((room, index) => /*#__PURE__*/_jsxDEV(RoomCard, {\n      room: room\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(FindReserve, \"pVIe8tJm1V/hStRMkuwTtBQhqgo=\");\n_c = FindReserve;\nexport default FindReserve;\nvar _c;\n$RefreshReg$(_c, \"FindReserve\");","map":{"version":3,"names":["React","useState","useEffect","RoomCard","jsxDEV","_jsxDEV","FindReserve","_s","rooms","setRooms","fetchRooms","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","error","console","className","children","map","room","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/zeynepbusesevincel/Desktop/csi2532_database_project/front-end/src/pages/FindReserve.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport RoomCard from '../components/RoomCard'; // Adjust according to your project structure\nimport './FindReserve.css'; // Adjust according to your project structure\n\nconst FindReserve = () => {\n  const [rooms, setRooms] = useState([]);\n\n  useEffect(() => {\n    async function fetchRooms() {\n      try {\n        const response = await fetch('http://localhost:8080/findAndReserve/rooms', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            \"chainName\": \"Maple Leaf Resorts\",\n            \"location\": \"BC\",\n            \"capacity\": 2,\n            \"minPrice\": 300,\n            \"maxPrice\": 750,\n            \"rating\": 4\n          })\n        });\n        if (!response.ok) throw new Error('Network response was not ok');\n        const data = await response.json();\n        setRooms(data); // Adjust this line if the structure of response is different\n      } catch (error) {\n        console.error(\"Error fetching rooms:\", error);\n      }\n    }\n\n    fetchRooms();\n  }, []);\n\n  return (\n    <div className=\"find-reserve-container\">\n      {rooms.map((room, index) => (\n        <RoomCard key={index} room={room} />\n      ))}\n    </div>\n  );\n};\n\nexport default FindReserve;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,wBAAwB,CAAC,CAAC;AAC/C,OAAO,mBAAmB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,eAAeQ,UAAUA,CAAA,EAAG;MAC1B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAA4C,EAAE;UACzEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnB,WAAW,EAAE,oBAAoB;YACjC,UAAU,EAAE,IAAI;YAChB,UAAU,EAAE,CAAC;YACb,UAAU,EAAE,GAAG;YACf,UAAU,EAAE,GAAG;YACf,QAAQ,EAAE;UACZ,CAAC;QACH,CAAC,CAAC;QACF,IAAI,CAACN,QAAQ,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChE,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;QAClCZ,QAAQ,CAACW,IAAI,CAAC,CAAC,CAAC;MAClB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF;IAEAZ,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKmB,SAAS,EAAC,wBAAwB;IAAAC,QAAA,EACpCjB,KAAK,CAACkB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrBvB,OAAA,CAACF,QAAQ;MAAawB,IAAI,EAAEA;IAAK,GAAlBC,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CACpC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACzB,EAAA,CApCID,WAAW;AAAA2B,EAAA,GAAX3B,WAAW;AAsCjB,eAAeA,WAAW;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}