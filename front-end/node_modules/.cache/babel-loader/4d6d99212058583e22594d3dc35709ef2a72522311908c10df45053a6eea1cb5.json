{"ast":null,"code":"var _jsxFileName = \"/Users/zeynepbusesevincel/Desktop/csi2532_database_project/front-end/src/components/SearchBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport RoomGuestsPopup from './RoomGuestsPopup'; // Import your RoomGuestsPopup component\nimport './SearchBar.css'; // Ensure you have the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBar = () => {\n  _s();\n  const [cities, setCities] = useState([]);\n  const [destination, setDestination] = useState('');\n  const [checkIn, setCheckIn] = useState('');\n  const [checkOut, setCheckOut] = useState('');\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  useEffect(() => {\n    const fetchCities = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/hotelchains/getHotelChainsAndHotels');\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        const fetchedCities = new Set(); // Use a Set to store unique cities\n\n        Object.values(data).forEach(chain => {\n          chain.forEach(chainItem => {\n            chainItem.hotels.forEach(hotel => {\n              // Assuming the address is a string and the city is the first part of the address\n              const city = hotel.address.split(',')[0];\n              fetchedCities.add(city);\n            });\n          });\n        });\n        setCities([...fetchedCities]); // Convert the Set to an array\n      } catch (error) {\n        console.error('There was a problem fetching the hotel cities:', error);\n      }\n    };\n    fetchCities();\n  }, []);\n  const togglePopup = () => {\n    setIsPopupOpen(!isPopupOpen);\n  };\n  const handleSearch = e => {\n    e.preventDefault();\n    console.log(destination, checkIn, checkOut);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-bar-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"search-bar\",\n      onSubmit: handleSearch,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"destination\",\n          className: \"input-label\",\n          children: \"Choose a destination\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"destination\",\n          value: destination,\n          onChange: e => setDestination(e.target.value),\n          className: \"input-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a city\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), cities.map((city, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: city,\n            children: city\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), isPopupOpen && /*#__PURE__*/_jsxDEV(RoomGuestsPopup, {\n      togglePopup: togglePopup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchBar, \"iK9jKjue5ixHQcPGJ9nXSBaozlQ=\");\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","useEffect","RoomGuestsPopup","jsxDEV","_jsxDEV","SearchBar","_s","cities","setCities","destination","setDestination","checkIn","setCheckIn","checkOut","setCheckOut","isPopupOpen","setIsPopupOpen","fetchCities","response","fetch","ok","Error","data","json","fetchedCities","Set","Object","values","forEach","chain","chainItem","hotels","hotel","city","address","split","add","error","console","togglePopup","handleSearch","e","preventDefault","log","className","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","value","onChange","target","map","index","_c","$RefreshReg$"],"sources":["/Users/zeynepbusesevincel/Desktop/csi2532_database_project/front-end/src/components/SearchBar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport RoomGuestsPopup from './RoomGuestsPopup'; // Import your RoomGuestsPopup component\nimport './SearchBar.css'; // Ensure you have the CSS file\n\nconst SearchBar = () => {\n  const [cities, setCities] = useState([]);\n  const [destination, setDestination] = useState('');\n  const [checkIn, setCheckIn] = useState('');\n  const [checkOut, setCheckOut] = useState('');\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n\n  useEffect(() => {\n    const fetchCities = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/hotelchains/getHotelChainsAndHotels');\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        const fetchedCities = new Set(); // Use a Set to store unique cities\n\n        Object.values(data).forEach(chain => {\n          chain.forEach(chainItem => {\n            chainItem.hotels.forEach(hotel => {\n              // Assuming the address is a string and the city is the first part of the address\n              const city = hotel.address.split(',')[0];\n              fetchedCities.add(city);\n            });\n          });\n        });\n\n        setCities([...fetchedCities]); // Convert the Set to an array\n      } catch (error) {\n        console.error('There was a problem fetching the hotel cities:', error);\n      }\n    };\n\n    fetchCities();\n  }, []);\n\n  const togglePopup = () => {\n    setIsPopupOpen(!isPopupOpen);\n  };\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    console.log(destination, checkIn, checkOut);\n  };\n\n  return (\n    <div className=\"search-bar-wrapper\">\n      <form className=\"search-bar\" onSubmit={handleSearch}>\n        <div className=\"input-group\">\n          <label htmlFor=\"destination\" className=\"input-label\">Choose a destination</label>\n          <select\n            id=\"destination\"\n            value={destination}\n            onChange={(e) => setDestination(e.target.value)}\n            className=\"input-field\"\n          >\n            <option value=\"\">Select a city</option>\n            {cities.map((city, index) => (\n              <option key={index} value={city}>{city}</option>\n            ))}\n          </select>\n        </div>\n        {/* The rest of the form remains unchanged */}\n      </form>\n      {isPopupOpen && <RoomGuestsPopup togglePopup={togglePopup} />}\n    </div>\n  );\n};\n\nexport default SearchBar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,eAAe,MAAM,mBAAmB,CAAC,CAAC;AACjD,OAAO,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAErDC,SAAS,CAAC,MAAM;IACd,MAAMgB,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,2DAA2D,CAAC;QACzF,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChD;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClC,MAAMC,aAAa,GAAG,IAAIC,GAAG,CAAC,CAAC,CAAC,CAAC;;QAEjCC,MAAM,CAACC,MAAM,CAACL,IAAI,CAAC,CAACM,OAAO,CAACC,KAAK,IAAI;UACnCA,KAAK,CAACD,OAAO,CAACE,SAAS,IAAI;YACzBA,SAAS,CAACC,MAAM,CAACH,OAAO,CAACI,KAAK,IAAI;cAChC;cACA,MAAMC,IAAI,GAAGD,KAAK,CAACE,OAAO,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;cACxCX,aAAa,CAACY,GAAG,CAACH,IAAI,CAAC;YACzB,CAAC,CAAC;UACJ,CAAC,CAAC;QACJ,CAAC,CAAC;QAEFzB,SAAS,CAAC,CAAC,GAAGgB,aAAa,CAAC,CAAC,CAAC,CAAC;MACjC,CAAC,CAAC,OAAOa,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,gDAAgD,EAAEA,KAAK,CAAC;MACxE;IACF,CAAC;IAEDpB,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMsB,WAAW,GAAGA,CAAA,KAAM;IACxBvB,cAAc,CAAC,CAACD,WAAW,CAAC;EAC9B,CAAC;EAED,MAAMyB,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBJ,OAAO,CAACK,GAAG,CAAClC,WAAW,EAAEE,OAAO,EAAEE,QAAQ,CAAC;EAC7C,CAAC;EAED,oBACET,OAAA;IAAKwC,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjCzC,OAAA;MAAMwC,SAAS,EAAC,YAAY;MAACE,QAAQ,EAAEN,YAAa;MAAAK,QAAA,eAClDzC,OAAA;QAAKwC,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1BzC,OAAA;UAAO2C,OAAO,EAAC,aAAa;UAACH,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAC;QAAoB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACjF/C,OAAA;UACEgD,EAAE,EAAC,aAAa;UAChBC,KAAK,EAAE5C,WAAY;UACnB6C,QAAQ,EAAGb,CAAC,IAAK/B,cAAc,CAAC+B,CAAC,CAACc,MAAM,CAACF,KAAK,CAAE;UAChDT,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAEvBzC,OAAA;YAAQiD,KAAK,EAAC,EAAE;YAAAR,QAAA,EAAC;UAAa;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EACtC5C,MAAM,CAACiD,GAAG,CAAC,CAACvB,IAAI,EAAEwB,KAAK,kBACtBrD,OAAA;YAAoBiD,KAAK,EAAEpB,IAAK;YAAAY,QAAA,EAAEZ;UAAI,GAAzBwB,KAAK;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAA6B,CAChD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEF,CAAC,EACNpC,WAAW,iBAAIX,OAAA,CAACF,eAAe;MAACqC,WAAW,EAAEA;IAAY;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1D,CAAC;AAEV,CAAC;AAAC7C,EAAA,CAnEID,SAAS;AAAAqD,EAAA,GAATrD,SAAS;AAqEf,eAAeA,SAAS;AAAC,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}