{"ast":null,"code":"var _jsxFileName = \"/Users/zeynepbusesevincel/Desktop/csi2532_database_project/front-end/src/pages/FindReserve.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport RoomCard from '../components/RoomCard'; // Ensure this component is correctly implemented\nimport './FindReserve.css'; // Adjust the path as necessary\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FindReserve = () => {\n  _s();\n  const [rooms, setRooms] = useState([]);\n  useEffect(() => {\n    const fetchRooms = async () => {\n      // Example search criteria. Adjust according to your actual search inputs.\n      const searchCriteria = {\n        chainName: \"Maple Leaf Resorts\",\n        location: \"BC\",\n        capacity: 2,\n        minPrice: 300,\n        maxPrice: 750,\n        rating: 4\n      };\n      try {\n        const response = await fetch('http://localhost:8080/findAndReserve/rooms', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(searchCriteria)\n        });\n        if (!response.ok) throw new Error('Network response was not ok');\n        const data = await response.json();\n        // Assuming your API returns an array of rooms\n        setRooms(Object.values(data).flat()); // Flatten in case data is nested within each property\n      } catch (error) {\n        console.error(\"Error fetching rooms:\", error);\n      }\n    };\n    fetchRooms();\n  }, []); // Empty dependency array means this effect runs once on component mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"find-reserve-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Find and Reserve Rooms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"room-list\",\n      children: rooms.length > 0 ? rooms.map((room, index) =>\n      /*#__PURE__*/\n      // Ensure RoomCard is designed to take a room object and display its details\n      _jsxDEV(RoomCard, {\n        room: room\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No rooms available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(FindReserve, \"pVIe8tJm1V/hStRMkuwTtBQhqgo=\");\n_c = FindReserve;\nexport default FindReserve;\nvar _c;\n$RefreshReg$(_c, \"FindReserve\");","map":{"version":3,"names":["React","useState","useEffect","RoomCard","jsxDEV","_jsxDEV","FindReserve","_s","rooms","setRooms","fetchRooms","searchCriteria","chainName","location","capacity","minPrice","maxPrice","rating","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","Object","values","flat","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","room","index","_c","$RefreshReg$"],"sources":["/Users/zeynepbusesevincel/Desktop/csi2532_database_project/front-end/src/pages/FindReserve.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport RoomCard from '../components/RoomCard'; // Ensure this component is correctly implemented\nimport './FindReserve.css'; // Adjust the path as necessary\n\nconst FindReserve = () => {\n  const [rooms, setRooms] = useState([]);\n\n  useEffect(() => {\n    const fetchRooms = async () => {\n      // Example search criteria. Adjust according to your actual search inputs.\n      const searchCriteria = {\n        chainName: \"Maple Leaf Resorts\",\n        location: \"BC\",\n        capacity: 2,\n        minPrice: 300,\n        maxPrice: 750,\n        rating: 4\n      };\n\n      try {\n        const response = await fetch('http://localhost:8080/findAndReserve/rooms', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(searchCriteria),\n        });\n        if (!response.ok) throw new Error('Network response was not ok');\n        const data = await response.json();\n        // Assuming your API returns an array of rooms\n        setRooms(Object.values(data).flat()); // Flatten in case data is nested within each property\n      } catch (error) {\n        console.error(\"Error fetching rooms:\", error);\n      }\n    };\n\n    fetchRooms();\n  }, []); // Empty dependency array means this effect runs once on component mount\n\n  return (\n    <div className=\"find-reserve-container\">\n      {/* Assuming you have a SearchBar component or similar search functionality */}\n      <h2>Find and Reserve Rooms</h2>\n      <div className=\"room-list\">\n        {rooms.length > 0 ? (\n          rooms.map((room, index) => (\n            // Ensure RoomCard is designed to take a room object and display its details\n            <RoomCard key={index} room={room} />\n          ))\n        ) : (\n          <p>No rooms available.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default FindReserve;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,wBAAwB,CAAC,CAAC;AAC/C,OAAO,mBAAmB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMQ,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B;MACA,MAAMC,cAAc,GAAG;QACrBC,SAAS,EAAE,oBAAoB;QAC/BC,QAAQ,EAAE,IAAI;QACdC,QAAQ,EAAE,CAAC;QACXC,QAAQ,EAAE,GAAG;QACbC,QAAQ,EAAE,GAAG;QACbC,MAAM,EAAE;MACV,CAAC;MAED,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAA4C,EAAE;UACzEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACb,cAAc;QACrC,CAAC,CAAC;QACF,IAAI,CAACO,QAAQ,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChE,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;QAClC;QACAnB,QAAQ,CAACoB,MAAM,CAACC,MAAM,CAACH,IAAI,CAAC,CAACI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;MACxC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IAEDtB,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEL,OAAA;IAAK6B,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBAErC9B,OAAA;MAAA8B,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/BlC,OAAA;MAAK6B,SAAS,EAAC,WAAW;MAAAC,QAAA,EACvB3B,KAAK,CAACgC,MAAM,GAAG,CAAC,GACfhC,KAAK,CAACiC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK;MAAA;MACpB;MACAtC,OAAA,CAACF,QAAQ;QAAauC,IAAI,EAAEA;MAAK,GAAlBC,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CACpC,CAAC,gBAEFlC,OAAA;QAAA8B,QAAA,EAAG;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAC1B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAChC,EAAA,CAjDID,WAAW;AAAAsC,EAAA,GAAXtC,WAAW;AAmDjB,eAAeA,WAAW;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}