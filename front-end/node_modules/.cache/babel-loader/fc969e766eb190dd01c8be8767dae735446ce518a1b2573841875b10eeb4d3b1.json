{"ast":null,"code":"var _jsxFileName = \"/Users/zeynepbusesevincel/Desktop/csi2532_database_project/front-end/src/pages/FindReserve.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport RoomCard from '../components/RoomCard';\nimport FilterPopup from '../components/FilterPopup';\nimport './FindReserve.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FindReserve = () => {\n  _s();\n  const [rooms, setRooms] = useState([]);\n  const [isFilterPopupOpen, setIsFilterPopupOpen] = useState(false);\n  const [filters, setFilters] = useState({\n    roomCapacity: [],\n    // Change this to an array for multiple selections\n    hotelChain: [],\n    categoryOfHotel: [],\n    totalNumberOfRooms: [],\n    price: []\n  });\n  useEffect(() => {\n    fetchRooms();\n  }, [filters]); // Refetch rooms when filters change\n\n  const fetchRooms = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/findAndReserve/rooms', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(filters)\n      });\n      if (!response.ok) throw new Error('Failed to fetch rooms');\n      const data = await response.json();\n      setRooms(data); // Assuming data is an array of rooms\n    } catch (error) {\n      console.error(\"Error fetching rooms:\", error);\n    }\n  };\n  const handleFilterChange = newFilters => {\n    setFilters(newFilters);\n    setIsFilterPopupOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"find-reserve-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsFilterPopupOpen(true),\n      className: \"filter-button\",\n      children: \"Filter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rooms-container\",\n      children: rooms.length > 0 ? rooms.map((room, index) => /*#__PURE__*/_jsxDEV(RoomCard, {\n        room: room\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 48\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No rooms available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), isFilterPopupOpen && /*#__PURE__*/_jsxDEV(FilterPopup, {\n      filters: filters,\n      setFilters: handleFilterChange,\n      onClose: () => setIsFilterPopupOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(FindReserve, \"xgevEqj4S89qq0L93mrF/TGNWFA=\");\n_c = FindReserve;\nexport default FindReserve;\nvar _c;\n$RefreshReg$(_c, \"FindReserve\");","map":{"version":3,"names":["React","useState","useEffect","RoomCard","FilterPopup","jsxDEV","_jsxDEV","FindReserve","_s","rooms","setRooms","isFilterPopupOpen","setIsFilterPopupOpen","filters","setFilters","roomCapacity","hotelChain","categoryOfHotel","totalNumberOfRooms","price","fetchRooms","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","error","console","handleFilterChange","newFilters","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","map","room","index","onClose","_c","$RefreshReg$"],"sources":["/Users/zeynepbusesevincel/Desktop/csi2532_database_project/front-end/src/pages/FindReserve.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport RoomCard from '../components/RoomCard';\nimport FilterPopup from '../components/FilterPopup';\nimport './FindReserve.css';\n\nconst FindReserve = () => {\n    const [rooms, setRooms] = useState([]);\n    const [isFilterPopupOpen, setIsFilterPopupOpen] = useState(false);\n    const [filters, setFilters] = useState({\n        roomCapacity: [], // Change this to an array for multiple selections\n        hotelChain: [],\n        categoryOfHotel: [],\n        totalNumberOfRooms: [],\n        price: [],\n    });\n\n    useEffect(() => {\n        fetchRooms();\n    }, [filters]); // Refetch rooms when filters change\n\n    const fetchRooms = async () => {\n        try {\n            const response = await fetch('http://localhost:8080/findAndReserve/rooms', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(filters),\n            });\n\n            if (!response.ok) throw new Error('Failed to fetch rooms');\n\n            const data = await response.json();\n            setRooms(data); // Assuming data is an array of rooms\n        } catch (error) {\n            console.error(\"Error fetching rooms:\", error);\n        }\n    };\n\n    const handleFilterChange = (newFilters) => {\n        setFilters(newFilters);\n        setIsFilterPopupOpen(false);\n    };\n\n    return (\n        <div className=\"find-reserve-container\">\n            <button onClick={() => setIsFilterPopupOpen(true)} className=\"filter-button\">\n                Filter\n            </button>\n            <div className=\"rooms-container\">\n                {rooms.length > 0 ? (\n                    rooms.map((room, index) => <RoomCard key={index} room={room} />)\n                ) : (\n                    <p>No rooms available</p>\n                )}\n            </div>\n            {isFilterPopupOpen && (\n                <FilterPopup\n                    filters={filters}\n                    setFilters={handleFilterChange}\n                    onClose={() => setIsFilterPopupOpen(false)}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default FindReserve;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}