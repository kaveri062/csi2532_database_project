{"ast":null,"code":"var _jsxFileName = \"/Users/zeynepbusesevincel/Desktop/csi2532_database_project/front-end/src/components/SearchBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport RoomGuestsPopup from './RoomGuestsPopup'; // Make sure to have this component\nimport './SearchBar.css'; // Ensure your CSS file is linked correctly\nimport { Link } from 'react-router-dom'; // Use Link for navigation\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBar = () => {\n  _s();\n  const [cities, setCities] = useState([]);\n  const [destination, setDestination] = useState('');\n  const [checkIn, setCheckIn] = useState('');\n  const [checkOut, setCheckOut] = useState('');\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  useEffect(() => {\n    const fetchCities = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/hotelchains/getHotelChainsAndHotels');\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const data = await response.json();\n        const allCities = [];\n        Object.values(data).forEach(chainArray => {\n          chainArray.forEach(chainItem => {\n            chainItem.hotels.forEach(hotel => {\n              const addressParts = hotel.address.split(', ');\n              const city = addressParts[1]; // Assuming city is always the second part\n              if (city && !allCities.includes(city.trim())) {\n                allCities.push(city.trim());\n              }\n            });\n          });\n        });\n        setCities([...new Set(allCities)].sort());\n      } catch (error) {\n        console.error('Fetching hotel cities failed:', error);\n      }\n    };\n    fetchCities();\n  }, []);\n  const handleSearch = e => {\n    e.preventDefault();\n    console.log('Search Details:', {\n      destination,\n      checkIn,\n      checkOut\n    });\n    // Add logic to perform the search with the input values\n  };\n  const togglePopup = () => {\n    setIsPopupOpen(!isPopupOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-bar-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"search-bar\",\n      onSubmit: handleSearch,\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/find-reserve\",\n        children: \"Go to Find and Reserve Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchBar, \"iK9jKjue5ixHQcPGJ9nXSBaozlQ=\");\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","useEffect","RoomGuestsPopup","Link","jsxDEV","_jsxDEV","SearchBar","_s","cities","setCities","destination","setDestination","checkIn","setCheckIn","checkOut","setCheckOut","isPopupOpen","setIsPopupOpen","fetchCities","response","fetch","ok","Error","status","data","json","allCities","Object","values","forEach","chainArray","chainItem","hotels","hotel","addressParts","address","split","city","includes","trim","push","Set","sort","error","console","handleSearch","e","preventDefault","log","togglePopup","className","children","onSubmit","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/zeynepbusesevincel/Desktop/csi2532_database_project/front-end/src/components/SearchBar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport RoomGuestsPopup from './RoomGuestsPopup'; // Make sure to have this component\nimport './SearchBar.css'; // Ensure your CSS file is linked correctly\nimport { Link } from 'react-router-dom'; // Use Link for navigation\n\nconst SearchBar = () => {\n  const [cities, setCities] = useState([]);\n  const [destination, setDestination] = useState('');\n  const [checkIn, setCheckIn] = useState('');\n  const [checkOut, setCheckOut] = useState('');\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n\n  useEffect(() => {\n    const fetchCities = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/hotelchains/getHotelChainsAndHotels');\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const data = await response.json();\n\n        const allCities = [];\n        Object.values(data).forEach(chainArray => {\n          chainArray.forEach(chainItem => {\n            chainItem.hotels.forEach(hotel => {\n              const addressParts = hotel.address.split(', ');\n              const city = addressParts[1]; // Assuming city is always the second part\n              if (city && !allCities.includes(city.trim())) {\n                allCities.push(city.trim());\n              }\n            });\n          });\n        });\n\n        setCities([...new Set(allCities)].sort());\n      } catch (error) {\n        console.error('Fetching hotel cities failed:', error);\n      }\n    };\n\n    fetchCities();\n  }, []);\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    console.log('Search Details:', { destination, checkIn, checkOut });\n    // Add logic to perform the search with the input values\n  };\n\n  const togglePopup = () => {\n    setIsPopupOpen(!isPopupOpen);\n  };\n\n  return (\n    <div className=\"search-bar-wrapper\">\n      <form className=\"search-bar\" onSubmit={handleSearch}>\n        {/* Your input fields and popup button here */}\n        <Link to=\"/find-reserve\">Go to Find and Reserve Page</Link>\n      </form>\n    </div>\n  );\n};\n\nexport default SearchBar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}