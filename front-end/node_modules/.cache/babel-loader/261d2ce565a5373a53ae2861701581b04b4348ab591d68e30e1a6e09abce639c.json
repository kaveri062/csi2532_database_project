{"ast":null,"code":"var _jsxFileName = \"/Users/zeynepbusesevincel/Desktop/csi2532_database_project/front-end/src/pages/FindReserve.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FindReserve = () => {\n  _s();\n  const [rooms, setRooms] = useState([]);\n  const [filters, setFilters] = useState({\n    chainName: \"\",\n    location: \"\",\n    capacity: 0,\n    minPrice: 0,\n    maxPrice: 0,\n    rating: 0\n  });\n\n  // Function to update filters based on user input\n  const handleFilterChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFilters(prevFilters => ({\n      ...prevFilters,\n      [name]: value\n    }));\n  };\n  useEffect(() => {\n    const fetchRooms = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/findAndReserve/rooms', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(filters)\n        });\n        if (!response.ok) {\n          throw new Error('Failed to fetch rooms');\n        }\n        const data = await response.json();\n        const roomsArray = Object.values(data).flat();\n        setRooms(roomsArray);\n      } catch (error) {\n        console.error(\"Error fetching rooms:\", error);\n      }\n    };\n\n    // Call fetchRooms if filters are set\n    if (filters.chainName && filters.location) {\n      fetchRooms();\n    }\n  }, [filters]); // Re-run the effect when filters change\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"chainName\",\n      placeholder: \"Hotel Chain\",\n      value: filters.chainName,\n      onChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"location\",\n      placeholder: \"Location\",\n      value: filters.location,\n      onChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), rooms.length > 0 ? rooms.map((room, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: room.hotelName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: room.address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Rating: \", room.rating]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Price: $\", room.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Amenities: \", room.amenities]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No rooms available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(FindReserve, \"qfra31SpmPc005r3AKT7HjZImmY=\");\n_c = FindReserve;\nexport default FindReserve;\nvar _c;\n$RefreshReg$(_c, \"FindReserve\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","FindReserve","_s","rooms","setRooms","filters","setFilters","chainName","location","capacity","minPrice","maxPrice","rating","handleFilterChange","e","name","value","target","prevFilters","fetchRooms","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","roomsArray","Object","values","flat","error","console","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","length","map","room","index","hotelName","address","price","amenities","_c","$RefreshReg$"],"sources":["/Users/zeynepbusesevincel/Desktop/csi2532_database_project/front-end/src/pages/FindReserve.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst FindReserve = () => {\n  const [rooms, setRooms] = useState([]);\n  const [filters, setFilters] = useState({\n    chainName: \"\",\n    location: \"\",\n    capacity: 0,\n    minPrice: 0,\n    maxPrice: 0,\n    rating: 0,\n  });\n\n  // Function to update filters based on user input\n  const handleFilterChange = (e) => {\n    const { name, value } = e.target;\n    setFilters(prevFilters => ({ ...prevFilters, [name]: value }));\n  };\n\n  useEffect(() => {\n    const fetchRooms = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/findAndReserve/rooms', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(filters),\n        });\n\n        if (!response.ok) {\n          throw new Error('Failed to fetch rooms');\n        }\n\n        const data = await response.json();\n        const roomsArray = Object.values(data).flat();\n        setRooms(roomsArray);\n      } catch (error) {\n        console.error(\"Error fetching rooms:\", error);\n      }\n    };\n\n    // Call fetchRooms if filters are set\n    if (filters.chainName && filters.location) {\n      fetchRooms();\n    }\n  }, [filters]); // Re-run the effect when filters change\n\n  return (\n    <div>\n      {/* Example inputs for filters (expand upon this based on your UI design) */}\n      <input\n        type=\"text\"\n        name=\"chainName\"\n        placeholder=\"Hotel Chain\"\n        value={filters.chainName}\n        onChange={handleFilterChange}\n      />\n      <input\n        type=\"text\"\n        name=\"location\"\n        placeholder=\"Location\"\n        value={filters.location}\n        onChange={handleFilterChange}\n      />\n      {/* Additional inputs for capacity, price, rating */}\n\n      {rooms.length > 0 ? (\n        rooms.map((room, index) => (\n          <div key={index}>\n            <h2>{room.hotelName}</h2>\n            <p>{room.address}</p>\n            <p>Rating: {room.rating}</p>\n            <p>Price: ${room.price}</p>\n            <p>Amenities: {room.amenities}</p>\n          </div>\n        ))\n      ) : (\n        <p>No rooms available</p>\n      )}\n    </div>\n  );\n};\n\nexport default FindReserve;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}