{"ast":null,"code":"var _jsxFileName = \"/Users/zeynepbusesevincel/Desktop/csi2532_database_project/front-end/src/pages/FindReserve.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport SearchBar from '../components/SearchBar';\nimport RoomCard from '../components/RoomCard';\nimport FilterPopup from '../components/FilterPopup';\nimport { useSearchParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FindReserve = () => {\n  _s();\n  const [isFilterPopupOpen, setIsFilterPopupOpen] = useState(false);\n  const [rooms, setRooms] = useState([]);\n  const [searchParams] = useSearchParams();\n\n  // Assuming searchParams could be used to hold filter criteria\n  useEffect(() => {\n    const fetchData = async () => {\n      const filterCriteria = {\n        chainName: searchParams.get('chainName'),\n        location: searchParams.get('location'),\n        capacity: parseInt(searchParams.get('capacity'), 10),\n        minPrice: parseFloat(searchParams.get('minPrice')),\n        maxPrice: parseFloat(searchParams.get('maxPrice')),\n        rating: parseInt(searchParams.get('rating'), 10)\n      };\n      try {\n        const response = await fetch('http://localhost:8080/findAndReserve/rooms', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(filterCriteria)\n        });\n        const data = await response.json();\n\n        // Transform the data into an array of room details\n        const roomsArray = Object.values(data).flat().map(room => ({\n          ...room,\n          amenities: room.amenities.split(', ') // Assuming amenities are returned as a comma-separated string\n        }));\n        setRooms(roomsArray);\n      } catch (error) {\n        console.error('Error fetching rooms:', error);\n      }\n    };\n    fetchData();\n  }, [searchParams]); // This effect runs whenever searchParams change\n\n  const handleApplyFilters = selectedAmenities => {\n    // Assuming you might want to apply more filters based on amenities\n    const filtered = rooms.filter(room => selectedAmenities.every(amenity => room.amenities.includes(amenity)));\n    setRooms(filtered);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"find-reserve-container\",\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsFilterPopupOpen(true),\n      className: \"filter-amenities-button\",\n      children: \"Filter Amenities\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), isFilterPopupOpen && /*#__PURE__*/_jsxDEV(FilterPopup, {\n      onClose: () => setIsFilterPopupOpen(false),\n      onApplyFilters: handleApplyFilters,\n      availableAmenities: Array.from(new Set(rooms.flatMap(room => room.amenities)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"room-listing\",\n      children: rooms.map((room, index) => /*#__PURE__*/_jsxDEV(RoomCard, {\n        room: room\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(FindReserve, \"JoPWDEy/wBjyPDfIKv7tnBaIGNw=\", false, function () {\n  return [useSearchParams];\n});\n_c = FindReserve;\nexport default FindReserve;\nvar _c;\n$RefreshReg$(_c, \"FindReserve\");","map":{"version":3,"names":["React","useState","useEffect","SearchBar","RoomCard","FilterPopup","useSearchParams","jsxDEV","_jsxDEV","FindReserve","_s","isFilterPopupOpen","setIsFilterPopupOpen","rooms","setRooms","searchParams","fetchData","filterCriteria","chainName","get","location","capacity","parseInt","minPrice","parseFloat","maxPrice","rating","response","fetch","method","headers","body","JSON","stringify","data","json","roomsArray","Object","values","flat","map","room","amenities","split","error","console","handleApplyFilters","selectedAmenities","filtered","filter","every","amenity","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onClose","onApplyFilters","availableAmenities","Array","from","Set","flatMap","index","_c","$RefreshReg$"],"sources":["/Users/zeynepbusesevincel/Desktop/csi2532_database_project/front-end/src/pages/FindReserve.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport SearchBar from '../components/SearchBar';\nimport RoomCard from '../components/RoomCard';\nimport FilterPopup from '../components/FilterPopup';\nimport { useSearchParams } from 'react-router-dom';\n\nconst FindReserve = () => {\n  const [isFilterPopupOpen, setIsFilterPopupOpen] = useState(false);\n  const [rooms, setRooms] = useState([]);\n  const [searchParams] = useSearchParams();\n\n  // Assuming searchParams could be used to hold filter criteria\n  useEffect(() => {\n    const fetchData = async () => {\n      const filterCriteria = {\n        chainName: searchParams.get('chainName'),\n        location: searchParams.get('location'),\n        capacity: parseInt(searchParams.get('capacity'), 10),\n        minPrice: parseFloat(searchParams.get('minPrice')),\n        maxPrice: parseFloat(searchParams.get('maxPrice')),\n        rating: parseInt(searchParams.get('rating'), 10),\n      };\n\n      try {\n        const response = await fetch('http://localhost:8080/findAndReserve/rooms', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(filterCriteria),\n        });\n        const data = await response.json();\n        \n        // Transform the data into an array of room details\n        const roomsArray = Object.values(data).flat().map(room => ({\n          ...room,\n          amenities: room.amenities.split(', '), // Assuming amenities are returned as a comma-separated string\n        }));\n        setRooms(roomsArray);\n      } catch (error) {\n        console.error('Error fetching rooms:', error);\n      }\n    };\n\n    fetchData();\n  }, [searchParams]); // This effect runs whenever searchParams change\n\n  const handleApplyFilters = (selectedAmenities) => {\n    // Assuming you might want to apply more filters based on amenities\n    const filtered = rooms.filter(room => \n      selectedAmenities.every(amenity => room.amenities.includes(amenity))\n    );\n    setRooms(filtered);\n  };\n\n  return (\n    <div className=\"find-reserve-container\">\n      <SearchBar />\n      <button onClick={() => setIsFilterPopupOpen(true)} className=\"filter-amenities-button\">\n        Filter Amenities\n      </button>\n      {isFilterPopupOpen && (\n        <FilterPopup \n          onClose={() => setIsFilterPopupOpen(false)} \n          onApplyFilters={handleApplyFilters} \n          availableAmenities={Array.from(new Set(rooms.flatMap(room => room.amenities)))}\n        />\n      )}\n      <div className=\"room-listing\">\n        {rooms.map((room, index) => (\n          <RoomCard key={index} room={room} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default FindReserve;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}