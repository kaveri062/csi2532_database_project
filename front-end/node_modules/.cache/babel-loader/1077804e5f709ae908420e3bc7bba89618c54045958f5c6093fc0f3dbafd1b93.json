{"ast":null,"code":"var _jsxFileName = \"/Users/zeynepbusesevincel/Desktop/csi2532_database_project/front-end/src/pages/HotelInfo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport BookingFormPopup from '../components/BookingFormPopup'; // Adjust the import path as necessary\nimport './HotelInfo.css'; // Ensure the CSS file path is correct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HotelInfo = () => {\n  _s();\n  const {\n    hotelName\n  } = useParams();\n  const [hotelDetails, setHotelDetails] = useState(null);\n  const [showBookingForm, setShowBookingForm] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchHotelChainsAndHotels = async () => {\n      setLoading(true);\n      try {\n        const response = await fetch('http://localhost:8080/hotelchains/getHotelChainsAndHotels');\n        if (!response.ok) {\n          throw new Error(`Failed to fetch hotel chains and hotels: ${response.statusText}`);\n        }\n        const data = await response.json();\n        let foundHotel = null;\n        let chainName = '';\n        Object.entries(data).forEach(([key, value]) => {\n          value.forEach(chain => {\n            const hotel = chain.hotels.find(h => h === hotelName);\n            if (hotel) {\n              foundHotel = hotel; // Assuming hotel is an object\n              chainName = chain.chainName; // Assuming each chain object has a chainName\n            }\n          });\n        });\n        if (!foundHotel) {\n          throw new Error('Hotel not found');\n        }\n        setHotelDetails({\n          ...foundHotel,\n          chainName\n        }); // Add additional hotel details here\n      } catch (err) {\n        setError(`Error: ${err.message}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchHotelChainsAndHotels();\n  }, [hotelName]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 21\n  }, this);\n  if (!hotelDetails) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Hotel not found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 29\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hotel-info-container\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: \"\\u2190 Back to results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: hotelDetails.name || hotelName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hotel-details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowBookingForm(true),\n      children: \"Reserve a Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), showBookingForm && /*#__PURE__*/_jsxDEV(BookingFormPopup, {\n      hotel: hotelDetails,\n      onClose: () => setShowBookingForm(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(HotelInfo, \"QZX09ubQ4124mv0mzL66XCkHSCg=\", false, function () {\n  return [useParams];\n});\n_c = HotelInfo;\nexport default HotelInfo;\nvar _c;\n$RefreshReg$(_c, \"HotelInfo\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","BookingFormPopup","jsxDEV","_jsxDEV","HotelInfo","_s","hotelName","hotelDetails","setHotelDetails","showBookingForm","setShowBookingForm","loading","setLoading","error","setError","fetchHotelChainsAndHotels","response","fetch","ok","Error","statusText","data","json","foundHotel","chainName","Object","entries","forEach","key","value","chain","hotel","hotels","find","h","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","to","name","onClick","onClose","_c","$RefreshReg$"],"sources":["/Users/zeynepbusesevincel/Desktop/csi2532_database_project/front-end/src/pages/HotelInfo.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport BookingFormPopup from '../components/BookingFormPopup'; // Adjust the import path as necessary\nimport './HotelInfo.css'; // Ensure the CSS file path is correct\n\nconst HotelInfo = () => {\n  const { hotelName } = useParams();\n  const [hotelDetails, setHotelDetails] = useState(null);\n  const [showBookingForm, setShowBookingForm] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const fetchHotelChainsAndHotels = async () => {\n      setLoading(true);\n      try {\n        const response = await fetch('http://localhost:8080/hotelchains/getHotelChainsAndHotels');\n        if (!response.ok) {\n          throw new Error(`Failed to fetch hotel chains and hotels: ${response.statusText}`);\n        }\n\n        const data = await response.json();\n        let foundHotel = null;\n        let chainName = '';\n\n        Object.entries(data).forEach(([key, value]) => {\n          value.forEach(chain => {\n            const hotel = chain.hotels.find(h => h === hotelName);\n            if (hotel) {\n              foundHotel = hotel; // Assuming hotel is an object\n              chainName = chain.chainName; // Assuming each chain object has a chainName\n            }\n          });\n        });\n\n        if (!foundHotel) {\n          throw new Error('Hotel not found');\n        }\n\n        setHotelDetails({ ...foundHotel, chainName }); // Add additional hotel details here\n      } catch (err) {\n        setError(`Error: ${err.message}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchHotelChainsAndHotels();\n  }, [hotelName]);\n\n  if (loading) return <div>Loading...</div>;\n  if (error) return <div>{error}</div>;\n  if (!hotelDetails) return <div>Hotel not found</div>;\n\n  return (\n    <div className=\"hotel-info-container\">\n      <Link to=\"/\">‚Üê Back to results</Link> {/* Consider using react-router-dom's Link for navigation */}\n      <h1>{hotelDetails.name || hotelName}</h1> {/* Adjust according to your data */}\n      <div className=\"hotel-details\">\n        {/* Display other hotel details. Adjust as necessary based on your API structure */}\n      </div>\n      <button onClick={() => setShowBookingForm(true)}>Reserve a Room</button>\n      \n      {showBookingForm && (\n        <BookingFormPopup\n          hotel={hotelDetails}\n          onClose={() => setShowBookingForm(false)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default HotelInfo;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}