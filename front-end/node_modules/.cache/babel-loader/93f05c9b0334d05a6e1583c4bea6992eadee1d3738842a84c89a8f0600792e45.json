{"ast":null,"code":"var _jsxFileName = \"/Users/zeynepbusesevincel/Desktop/csi2532_database_project/front-end/src/pages/FindReserve.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport RoomCard from '../components/RoomCard'; // Make sure this path is correct\nimport './FindReserve.css'; // CSS for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FindReserve = () => {\n  _s();\n  const [rooms, setRooms] = useState([]);\n\n  // Simulated search criteria, adjust according to your application's functionality\n  const searchCriteria = {\n    chainName: \"Maple Leaf Resorts\",\n    location: \"BC\",\n    capacity: 2,\n    minPrice: 300,\n    maxPrice: 750,\n    rating: 4\n  };\n  useEffect(() => {\n    const fetchRooms = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/findAndReserve/rooms', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(searchCriteria)\n        });\n        if (!response.ok) throw new Error('Failed to fetch');\n        const data = await response.json();\n        // Assuming the response is an array of rooms\n        setRooms(Object.values(data).flat());\n      } catch (error) {\n        console.error(\"Fetch error:\", error);\n      }\n    };\n    fetchRooms();\n  }, []); // Empty dependency array means this effect runs once on mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"find-reserve-container\",\n    children: rooms.map((room, index) => /*#__PURE__*/_jsxDEV(RoomCard, {\n      room: room\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(FindReserve, \"pVIe8tJm1V/hStRMkuwTtBQhqgo=\");\n_c = FindReserve;\nexport default FindReserve;\nvar _c;\n$RefreshReg$(_c, \"FindReserve\");","map":{"version":3,"names":["React","useState","useEffect","RoomCard","jsxDEV","_jsxDEV","FindReserve","_s","rooms","setRooms","searchCriteria","chainName","location","capacity","minPrice","maxPrice","rating","fetchRooms","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","Object","values","flat","error","console","className","children","map","room","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/zeynepbusesevincel/Desktop/csi2532_database_project/front-end/src/pages/FindReserve.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport RoomCard from '../components/RoomCard'; // Make sure this path is correct\nimport './FindReserve.css'; // CSS for styling\n\nconst FindReserve = () => {\n  const [rooms, setRooms] = useState([]);\n\n  // Simulated search criteria, adjust according to your application's functionality\n  const searchCriteria = {\n    chainName: \"Maple Leaf Resorts\",\n    location: \"BC\",\n    capacity: 2,\n    minPrice: 300,\n    maxPrice: 750,\n    rating: 4\n  };\n\n  useEffect(() => {\n    const fetchRooms = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/findAndReserve/rooms', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(searchCriteria),\n        });\n        if (!response.ok) throw new Error('Failed to fetch');\n        const data = await response.json();\n        // Assuming the response is an array of rooms\n        setRooms(Object.values(data).flat());\n      } catch (error) {\n        console.error(\"Fetch error:\", error);\n      }\n    };\n\n    fetchRooms();\n  }, []); // Empty dependency array means this effect runs once on mount\n\n  return (\n    <div className=\"find-reserve-container\">\n      {rooms.map((room, index) => (\n        <RoomCard key={index} room={room} />\n      ))}\n    </div>\n  );\n};\n\nexport default FindReserve;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,wBAAwB,CAAC,CAAC;AAC/C,OAAO,mBAAmB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAMS,cAAc,GAAG;IACrBC,SAAS,EAAE,oBAAoB;IAC/BC,QAAQ,EAAE,IAAI;IACdC,QAAQ,EAAE,CAAC;IACXC,QAAQ,EAAE,GAAG;IACbC,QAAQ,EAAE,GAAG;IACbC,MAAM,EAAE;EACV,CAAC;EAEDd,SAAS,CAAC,MAAM;IACd,MAAMe,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAA4C,EAAE;UACzEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACd,cAAc;QACrC,CAAC,CAAC;QACF,IAAI,CAACQ,QAAQ,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;QACpD,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;QAClC;QACAnB,QAAQ,CAACoB,MAAM,CAACC,MAAM,CAACH,IAAI,CAAC,CAACI,IAAI,CAAC,CAAC,CAAC;MACtC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACtC;IACF,CAAC;IAEDf,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEZ,OAAA;IAAK6B,SAAS,EAAC,wBAAwB;IAAAC,QAAA,EACpC3B,KAAK,CAAC4B,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrBjC,OAAA,CAACF,QAAQ;MAAakC,IAAI,EAAEA;IAAK,GAAlBC,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CACpC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACnC,EAAA,CAxCID,WAAW;AAAAqC,EAAA,GAAXrC,WAAW;AA0CjB,eAAeA,WAAW;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}