{"ast":null,"code":"var _jsxFileName = \"/Users/zeynepbusesevincel/Desktop/csi2532_database_project/front-end/src/components/FilterPopup.js\";\nimport React from 'react';\nimport './FilterPopup.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FilterPopup = ({\n  onClose,\n  filters,\n  setFilters,\n  applyFilters\n}) => {\n  const handleInputChange = event => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = event.target;\n\n    // Ensure filters[name] is always an array before updating\n    const updatedValue = Array.isArray(filters[name]) ? [...filters[name]] : [];\n\n    // Handle checkbox input type\n    if (type === 'checkbox') {\n      if (checked) {\n        updatedValue.push(value); // Add value if checked\n      } else {\n        const index = updatedValue.indexOf(value);\n        if (index !== -1) {\n          updatedValue.splice(index, 1); // Remove value if unchecked\n        }\n      }\n    } else {\n      updatedValue[0] = value; // Update other input types\n    }\n    setFilters({\n      ...filters,\n      [name]: updatedValue\n    });\n  };\n  const applyFiltersHandler = () => {\n    applyFilters(filters); // Pass updated filters to the parent component for filtering\n  };\n  const createCheckboxGroup = (title, items, name) => {\n    const filterValues = Array.isArray(filters[name]) ? filters[name] : [];\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), items.map((item, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: name,\n          value: item,\n          checked: filterValues.includes(item),\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this), item]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true);\n  };\n  const roomCapacities = ['1 person', '2 people', '3 people', '4 people'];\n  const hotelChains = ['Sunshine Villa & Bar', 'Sunset Getaway Hotel', 'Serenity Hotel & Spa', 'Ocean Breeze Retreat'];\n  const categories = ['1 star hotel', '2 star hotel', '3 star hotel', '4 star hotel', '5 star hotel'];\n  const totalRooms = ['< 50 rooms', '50-200 rooms', '200-500 rooms', '> 500 rooms'];\n  const prices = ['< $100 per night', '$100 - $200 per night', '$200 - $400 per night', '> $400 per night'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filter-popup-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Filters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        className: \"close-button\",\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), createCheckboxGroup('Room capacity', roomCapacities, 'capacity'), createCheckboxGroup('Hotel Chain', hotelChains, 'chainName'), createCheckboxGroup('Category of Hotel', categories, 'rating'), createCheckboxGroup('Total number of rooms in hotel', totalRooms, 'location'), createCheckboxGroup('Price', prices, 'minPrice'), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reset-button\",\n          onClick: () => setFilters({\n            chainName: '',\n            location: '',\n            capacity: [],\n            minPrice: '',\n            maxPrice: 10000,\n            rating: []\n          }),\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"apply-button\",\n          onClick: applyFiltersHandler,\n          children: \"Apply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_c = FilterPopup;\nexport default FilterPopup;\nvar _c;\n$RefreshReg$(_c, \"FilterPopup\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","FilterPopup","onClose","filters","setFilters","applyFilters","handleInputChange","event","name","value","type","checked","target","updatedValue","Array","isArray","push","index","indexOf","splice","applyFiltersHandler","createCheckboxGroup","title","items","filterValues","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","includes","onChange","roomCapacities","hotelChains","categories","totalRooms","prices","className","onClick","chainName","location","capacity","minPrice","maxPrice","rating","_c","$RefreshReg$"],"sources":["/Users/zeynepbusesevincel/Desktop/csi2532_database_project/front-end/src/components/FilterPopup.js"],"sourcesContent":["import React from 'react';\nimport './FilterPopup.css';\n\nconst FilterPopup = ({ onClose, filters, setFilters, applyFilters }) => {\n    const handleInputChange = (event) => {\n        const { name, value, type, checked } = event.target;\n\n        // Ensure filters[name] is always an array before updating\n        const updatedValue = Array.isArray(filters[name]) ? [...filters[name]] : [];\n\n        // Handle checkbox input type\n        if (type === 'checkbox') {\n            if (checked) {\n                updatedValue.push(value); // Add value if checked\n            } else {\n                const index = updatedValue.indexOf(value);\n                if (index !== -1) {\n                    updatedValue.splice(index, 1); // Remove value if unchecked\n                }\n            }\n        } else {\n            updatedValue[0] = value; // Update other input types\n        }\n\n        setFilters({ ...filters, [name]: updatedValue });\n    };\n\n    const applyFiltersHandler = () => {\n        applyFilters(filters); // Pass updated filters to the parent component for filtering\n    };\n\n    const createCheckboxGroup = (title, items, name) => {\n        const filterValues = Array.isArray(filters[name]) ? filters[name] : [];\n        return (\n            <>\n                <h3>{title}</h3>\n                {items.map((item, index) => (\n                    <label key={index}>\n                        <input\n                            type=\"checkbox\"\n                            name={name}\n                            value={item}\n                            checked={filterValues.includes(item)}\n                            onChange={handleInputChange}\n                        />\n                        {item}\n                    </label>\n                ))}\n            </>\n        );\n    };\n\n    const roomCapacities = ['1 person', '2 people', '3 people', '4 people'];\n    const hotelChains = ['Sunshine Villa & Bar', 'Sunset Getaway Hotel', 'Serenity Hotel & Spa', 'Ocean Breeze Retreat'];\n    const categories = ['1 star hotel', '2 star hotel', '3 star hotel', '4 star hotel', '5 star hotel'];\n    const totalRooms = ['< 50 rooms', '50-200 rooms', '200-500 rooms', '> 500 rooms'];\n    const prices = ['< $100 per night', '$100 - $200 per night', '$200 - $400 per night', '> $400 per night'];\n\n    return (\n        <div className=\"filter-popup-overlay\">\n            <div className=\"filter-popup\">\n                <h2>Filters</h2>\n                <button onClick={onClose} className=\"close-button\">X</button>\n                \n                {createCheckboxGroup('Room capacity', roomCapacities, 'capacity')}\n                {createCheckboxGroup('Hotel Chain', hotelChains, 'chainName')}\n                {createCheckboxGroup('Category of Hotel', categories, 'rating')}\n                {createCheckboxGroup('Total number of rooms in hotel', totalRooms, 'location')}\n                {createCheckboxGroup('Price', prices, 'minPrice')}\n\n                <div className=\"filter-actions\">\n                    <button className=\"reset-button\" onClick={() => setFilters({\n                        chainName: '',\n                        location: '',\n                        capacity: [],\n                        minPrice: '',\n                        maxPrice: 10000,\n                        rating: [],\n                    })}>Reset</button>\n                    <button className=\"apply-button\" onClick={applyFiltersHandler}>Apply</button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default FilterPopup;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}