{"ast":null,"code":"var _jsxFileName = \"/Users/zeynepbusesevincel/Desktop/csi2532_database_project/front-end/src/pages/FindReserve.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport RoomCard from '../components/RoomCard';\nimport FilterPopup from '../components/FilterPopup';\nimport RoomBookingPopup from '../components/RoomBookingPopup'; // Import the RoomBookingPopup component\nimport './FindReserve.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FindReserve = () => {\n  _s();\n  const [rooms, setRooms] = useState([]);\n  const [isFilterPopupOpen, setIsFilterPopupOpen] = useState(false);\n  const [isBookingPopupOpen, setIsBookingPopupOpen] = useState(false);\n  const [selectedRoom, setSelectedRoom] = useState(null); // Track the selected room for booking\n\n  useEffect(() => {\n    fetchRooms();\n  }, []);\n  const fetchRooms = async () => {\n    try {\n      // Fetch rooms data from API or database\n      const data = await fetch('http://localhost:8080/findAndReserve/rooms').then(res => res.json());\n      setRooms(data);\n    } catch (error) {\n      console.error(\"Error fetching rooms:\", error);\n    }\n  };\n  const handleBookNow = room => {\n    setSelectedRoom(room);\n    setIsBookingPopupOpen(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"find-reserve-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsFilterPopupOpen(true),\n      className: \"filter-button\",\n      children: \"Filter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rooms-container\",\n      children: rooms.length > 0 ? rooms.map((room, index) => /*#__PURE__*/_jsxDEV(RoomCard, {\n        room: room,\n        onBookNow: () => handleBookNow(room)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No rooms available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), isFilterPopupOpen && /*#__PURE__*/_jsxDEV(FilterPopup\n    // Pass required props to FilterPopup component\n    , {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this), isBookingPopupOpen && /*#__PURE__*/_jsxDEV(RoomBookingPopup, {\n      room: selectedRoom,\n      onClose: () => setIsBookingPopupOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(FindReserve, \"N9K4rLeZdimtuyO/xgWqlLlxpSg=\");\n_c = FindReserve;\nexport default FindReserve;\nvar _c;\n$RefreshReg$(_c, \"FindReserve\");","map":{"version":3,"names":["React","useState","useEffect","RoomCard","FilterPopup","RoomBookingPopup","jsxDEV","_jsxDEV","FindReserve","_s","rooms","setRooms","isFilterPopupOpen","setIsFilterPopupOpen","isBookingPopupOpen","setIsBookingPopupOpen","selectedRoom","setSelectedRoom","fetchRooms","data","fetch","then","res","json","error","console","handleBookNow","room","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","map","index","onBookNow","onClose","_c","$RefreshReg$"],"sources":["/Users/zeynepbusesevincel/Desktop/csi2532_database_project/front-end/src/pages/FindReserve.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport RoomCard from '../components/RoomCard';\nimport FilterPopup from '../components/FilterPopup';\nimport RoomBookingPopup from '../components/RoomBookingPopup'; // Import the RoomBookingPopup component\nimport './FindReserve.css';\n\nconst FindReserve = () => {\n    const [rooms, setRooms] = useState([]);\n    const [isFilterPopupOpen, setIsFilterPopupOpen] = useState(false);\n    const [isBookingPopupOpen, setIsBookingPopupOpen] = useState(false);\n    const [selectedRoom, setSelectedRoom] = useState(null); // Track the selected room for booking\n\n    useEffect(() => {\n        fetchRooms();\n    }, []);\n\n    const fetchRooms = async () => {\n        try {\n            // Fetch rooms data from API or database\n            const data = await fetch('http://localhost:8080/findAndReserve/rooms').then((res) => res.json());\n            setRooms(data);\n        } catch (error) {\n            console.error(\"Error fetching rooms:\", error);\n        }\n    };\n\n    const handleBookNow = (room) => {\n        setSelectedRoom(room);\n        setIsBookingPopupOpen(true);\n    };\n\n    return (\n        <div className=\"find-reserve-container\">\n            <button onClick={() => setIsFilterPopupOpen(true)} className=\"filter-button\">\n                Filter\n            </button>\n            <div className=\"rooms-container\">\n                {rooms.length > 0 ? (\n                    rooms.map((room, index) => (\n                        <RoomCard key={index} room={room} onBookNow={() => handleBookNow(room)} />\n                    ))\n                ) : (\n                    <p>No rooms available</p>\n                )}\n            </div>\n            {isFilterPopupOpen && (\n                <FilterPopup\n                    // Pass required props to FilterPopup component\n                />\n            )}\n            {isBookingPopupOpen && (\n                <RoomBookingPopup\n                    room={selectedRoom}\n                    onClose={() => setIsBookingPopupOpen(false)}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default FindReserve;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}