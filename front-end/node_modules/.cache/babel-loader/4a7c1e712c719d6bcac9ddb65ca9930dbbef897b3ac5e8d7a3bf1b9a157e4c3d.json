{"ast":null,"code":"var _jsxFileName = \"/Users/zeynepbusesevincel/Desktop/csi2532_database_project/front-end/src/components/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [userType, setUserType] = useState('');\n  const [userName, setUserName] = useState('');\n  const [isLoading, setIsLoading] = useState(true); // New loading state\n  const [error, setError] = useState(null); // New error state\n\n  useEffect(() => {\n    const userData = sessionStorage.getItem('authUser');\n    if (userData) {\n      const data = JSON.parse(userData);\n      setIsAuthenticated(data.isAuthenticated);\n      setUserType(data.userType);\n      setUserName(data.userName);\n    }\n    setIsLoading(false);\n  }, []);\n  const signIn = async (userType, userName) => {\n    try {\n      // Here you would typically make an API call to your backend to authenticate the user\n      setIsAuthenticated(true);\n      setUserType(userType);\n      setUserName(userName);\n      sessionStorage.setItem('authUser', JSON.stringify({\n        isAuthenticated: true,\n        userType,\n        userName\n      }));\n    } catch (error) {\n      setError(error);\n    }\n  };\n  const signOut = () => {\n    setIsAuthenticated(false);\n    setUserType('');\n    setUserName('');\n    sessionStorage.removeItem('authUser'); // Use removeItem instead of clear to only remove auth-related data\n    setError(null);\n  };\n\n  // The value now includes isLoading and error\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      userType,\n      userName,\n      signIn,\n      signOut,\n      isLoading,\n      error\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"sI/z6see6f2LKcYvbmmBC5QNpls=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","isAuthenticated","setIsAuthenticated","userType","setUserType","userName","setUserName","isLoading","setIsLoading","error","setError","userData","sessionStorage","getItem","data","JSON","parse","signIn","setItem","stringify","signOut","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/zeynepbusesevincel/Desktop/csi2532_database_project/front-end/src/components/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => useContext(AuthContext);\n\nexport const AuthProvider = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [userType, setUserType] = useState('');\n  const [userName, setUserName] = useState('');\n  const [isLoading, setIsLoading] = useState(true); // New loading state\n  const [error, setError] = useState(null); // New error state\n\n  useEffect(() => {\n    const userData = sessionStorage.getItem('authUser');\n    if (userData) {\n      const data = JSON.parse(userData);\n      setIsAuthenticated(data.isAuthenticated);\n      setUserType(data.userType);\n      setUserName(data.userName);\n    }\n    setIsLoading(false);\n  }, []);\n\n  const signIn = async (userType, userName) => {\n    try {\n      // Here you would typically make an API call to your backend to authenticate the user\n      setIsAuthenticated(true);\n      setUserType(userType);\n      setUserName(userName);\n      sessionStorage.setItem('authUser', JSON.stringify({ isAuthenticated: true, userType, userName }));\n    } catch (error) {\n      setError(error);\n    }\n  };\n\n  const signOut = () => {\n    setIsAuthenticated(false);\n    setUserType('');\n    setUserName('');\n    sessionStorage.removeItem('authUser'); // Use removeItem instead of clear to only remove auth-related data\n    setError(null);\n  };\n\n  // The value now includes isLoading and error\n  return (\n    <AuthContext.Provider value={{ isAuthenticated, userType, userName, signIn, signOut, isLoading, error }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMP,UAAU,CAACK,WAAW,CAAC;AAAA;AAACE,EAAA,CAAxCD,OAAO;AAEpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAClD,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE1CC,SAAS,CAAC,MAAM;IACd,MAAMmB,QAAQ,GAAGC,cAAc,CAACC,OAAO,CAAC,UAAU,CAAC;IACnD,IAAIF,QAAQ,EAAE;MACZ,MAAMG,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACL,QAAQ,CAAC;MACjCT,kBAAkB,CAACY,IAAI,CAACb,eAAe,CAAC;MACxCG,WAAW,CAACU,IAAI,CAACX,QAAQ,CAAC;MAC1BG,WAAW,CAACQ,IAAI,CAACT,QAAQ,CAAC;IAC5B;IACAG,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMS,MAAM,GAAG,MAAAA,CAAOd,QAAQ,EAAEE,QAAQ,KAAK;IAC3C,IAAI;MACF;MACAH,kBAAkB,CAAC,IAAI,CAAC;MACxBE,WAAW,CAACD,QAAQ,CAAC;MACrBG,WAAW,CAACD,QAAQ,CAAC;MACrBO,cAAc,CAACM,OAAO,CAAC,UAAU,EAAEH,IAAI,CAACI,SAAS,CAAC;QAAElB,eAAe,EAAE,IAAI;QAAEE,QAAQ;QAAEE;MAAS,CAAC,CAAC,CAAC;IACnG,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,QAAQ,CAACD,KAAK,CAAC;IACjB;EACF,CAAC;EAED,MAAMW,OAAO,GAAGA,CAAA,KAAM;IACpBlB,kBAAkB,CAAC,KAAK,CAAC;IACzBE,WAAW,CAAC,EAAE,CAAC;IACfE,WAAW,CAAC,EAAE,CAAC;IACfM,cAAc,CAACS,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;IACvCX,QAAQ,CAAC,IAAI,CAAC;EAChB,CAAC;;EAED;EACA,oBACEhB,OAAA,CAACC,WAAW,CAAC2B,QAAQ;IAACC,KAAK,EAAE;MAAEtB,eAAe;MAAEE,QAAQ;MAAEE,QAAQ;MAAEY,MAAM;MAAEG,OAAO;MAAEb,SAAS;MAAEE;IAAM,CAAE;IAAAV,QAAA,EACrGA;EAAQ;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC3B,GAAA,CA5CWF,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}