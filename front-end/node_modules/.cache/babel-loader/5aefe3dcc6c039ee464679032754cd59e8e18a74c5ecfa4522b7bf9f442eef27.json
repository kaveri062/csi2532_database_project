{"ast":null,"code":"var _jsxFileName = \"/Users/zeynepbusesevincel/Desktop/csi2532_database_project/front-end/src/components/AddReservationForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './AddReservationForm.css'; // Make sure you create this CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddReservationForm = ({\n  onClose\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    roomsGuests: '',\n    roomId: '',\n    clientSsn: '',\n    creditCardNumber: '',\n    expiration: '',\n    cvv: '',\n    checkIn: '',\n    checkOut: ''\n  });\n  const [rooms, setRooms] = useState([]);\n  const [selectedRoom, setSelectedRoom] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [roomID, setRoomID] = useState('');\n  const [totalAmount, setTotalAmount] = useState(0);\n  useEffect(() => {\n    const fetchRooms = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/findAndReserve/roomsByEmployeeId', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            employeeId: sessionStorage.getItem('ssn')\n          })\n        });\n        if (!response.ok) {\n          throw new Error('Failed to fetch rooms');\n        }\n        const data = await response.json();\n        setRooms(data);\n        setLoading(false);\n      } catch (error) {\n        setError(error.message);\n        setLoading(false);\n      }\n    };\n    fetchRooms();\n  }, []);\n  const handleRoomChange = e => {\n    const roomId = e.target.value;\n    const selectedRoom = rooms.find(room => room.id === roomId);\n    setSelectedRoom(selectedRoom || {}); // Set to an empty object if selectedRoom is undefined\n    setRoomID(roomId);\n\n    // Calculate total amount based on room price\n    setTotalAmount(selectedRoom ? selectedRoom.price : 0);\n  };\n  useEffect(() => {\n    console.log(\"room\", roomID); // Log the updated roomID\n  }, [roomID]); // Run this effect when roomID changes\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:8080/reservations/saveEmployeeReservations', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          clientId: formData.clientSsn,\n          // Assuming ssn is the client ID\n          employeeId: sessionStorage.getItem('ssn'),\n          roomId: parseInt(roomID, 10),\n          // Pass the roomId from the room\n          checkIn: formData.checkIn,\n          checkOut: formData.checkOut,\n          status: 'checkedIn',\n          // Set default status\n          paid: true // Set default paid status           \n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to create reservation');\n      }\n\n      // Handle success, such as displaying a success message\n      console.log('Reservation created successfully');\n      window.alert('Registered successfully'); // Display alert message\n\n      onClose(); // Close the modal on success\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-reservation-modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-reservation-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Direct renting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"room-select\",\n            children: \"Select a room:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"room-select\",\n            value: selectedRoom.id,\n            onChange: handleRoomChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a room\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this), rooms.map(room => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: room.id,\n              children: [room.type, \" - $\", room.price, \" per night\"]\n            }, room.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"total-amount\",\n          children: [\"Total: $\", totalAmount, \" CAD\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"confirm-payment-btn\",\n          children: \"Confirm payment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        className: \"close-modal-btn\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n_s(AddReservationForm, \"VOWQ7X1eaepcKIXq3l8bZeCyzWg=\");\n_c = AddReservationForm;\nexport default AddReservationForm;\nvar _c;\n$RefreshReg$(_c, \"AddReservationForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AddReservationForm","onClose","_s","formData","setFormData","roomsGuests","roomId","clientSsn","creditCardNumber","expiration","cvv","checkIn","checkOut","rooms","setRooms","selectedRoom","setSelectedRoom","loading","setLoading","error","setError","roomID","setRoomID","totalAmount","setTotalAmount","fetchRooms","response","fetch","method","headers","body","JSON","stringify","employeeId","sessionStorage","getItem","ok","Error","data","json","message","handleRoomChange","e","target","value","find","room","id","price","console","log","handleInputChange","name","prevState","handleSubmit","preventDefault","clientId","parseInt","status","paid","window","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","onChange","map","type","onClick","_c","$RefreshReg$"],"sources":["/Users/zeynepbusesevincel/Desktop/csi2532_database_project/front-end/src/components/AddReservationForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './AddReservationForm.css'; // Make sure you create this CSS file\n\nconst AddReservationForm = ({ onClose }) => {\n  const [formData, setFormData] = useState({\n    roomsGuests: '',\n    roomId:'',\n    clientSsn: '',\n    creditCardNumber: '',\n    expiration: '',\n    cvv: '',\n    checkIn: '',\n    checkOut: '',\n  });\n\n  const [rooms, setRooms] = useState([]);\n  const [selectedRoom, setSelectedRoom] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [roomID, setRoomID] = useState('');\n  const [totalAmount, setTotalAmount] = useState(0);\n\n  useEffect(() => {\n    const fetchRooms = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/findAndReserve/roomsByEmployeeId', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            employeeId: sessionStorage.getItem('ssn'),\n          }),\n        });\n\n        if (!response.ok) {\n          throw new Error('Failed to fetch rooms');\n        }\n\n        const data = await response.json();\n        setRooms(data);\n        setLoading(false);\n      } catch (error) {\n        setError(error.message);\n        setLoading(false);\n      }\n    };\n\n    fetchRooms();\n  }, []);\n\n  const handleRoomChange = (e) => {\n    const roomId = e.target.value;\n    const selectedRoom = rooms.find(room => room.id === roomId);\n    setSelectedRoom(selectedRoom || {}); // Set to an empty object if selectedRoom is undefined\n    setRoomID(roomId);\n\n    // Calculate total amount based on room price\n    setTotalAmount(selectedRoom ? selectedRoom.price : 0);\n  };\n\n  useEffect(() => {\n    console.log(\"room\", roomID); // Log the updated roomID\n  }, [roomID]); // Run this effect when roomID changes\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prevState => ({ ...prevState, [name]: value }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    try {\n      const response = await fetch('http://localhost:8080/reservations/saveEmployeeReservations', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(\n          {\n            clientId: formData.clientSsn, // Assuming ssn is the client ID\n            employeeId: sessionStorage.getItem('ssn'),\n            roomId: parseInt(roomID, 10), // Pass the roomId from the room\n            checkIn: formData.checkIn,\n            checkOut: formData.checkOut,\n            status: 'checkedIn', // Set default status\n            paid: true // Set default paid status           \n          }\n        ),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to create reservation');\n      }\n\n\n      // Handle success, such as displaying a success message\n      console.log('Reservation created successfully');\n      window.alert('Registered successfully'); // Display alert message\n\n      onClose(); // Close the modal on success\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return (\n    <div className=\"add-reservation-modal\">\n      <div className=\"add-reservation-content\">\n        <h2>Direct renting</h2>\n        <form onSubmit={handleSubmit}>\n          {/* Include the form fields based on the provided design */}\n          \n          {/* Room selection */}\n          <div>\n            <label htmlFor=\"room-select\">Select a room:</label>\n            <select id=\"room-select\" value={selectedRoom.id} onChange={handleRoomChange}>\n              <option value=\"\">Select a room</option>\n              {rooms.map((room) => (\n                <option key={room.id} value={room.id}>\n                  {room.type} - ${room.price} per night\n                </option>\n              ))}\n            </select>\n          </div>\n\n          {/* Other form inputs */}\n\n          {/* Total amount */}\n          <div className=\"total-amount\">\n            Total: ${totalAmount} CAD\n          </div>\n          \n          <button type=\"submit\" className=\"confirm-payment-btn\">\n            Confirm payment\n          </button>\n        </form>\n        \n        <button onClick={onClose} className=\"close-modal-btn\">\n          Close\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default AddReservationForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}