{"ast":null,"code":"const handleFindBooking = async () => {\n  try {\n    const requestBody = {\n      employeeId: \"111-22-3333\",\n      // Replace with actual employee ID\n      clientId: ssn\n    };\n    console.log('Request Body:', requestBody);\n    const response = await fetch('http://localhost:8080/reservations/clientReservations', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(requestBody)\n    });\n    console.log('Response Status:', response.status);\n    if (!response.ok) {\n      throw new Error('Failed to fetch booking');\n    }\n    const data = await response.json();\n    console.log('Booking data:', data);\n    if (data.length > 0) {\n      setBooking(data[0]);\n      console.log('Booking found:', data[0]);\n    } else {\n      setBooking(null);\n      console.log('No booking found for that SSN.');\n    }\n  } catch (error) {\n    console.error('Error fetching booking:', error.message);\n  }\n};","map":{"version":3,"names":["handleFindBooking","requestBody","employeeId","clientId","ssn","console","log","response","fetch","method","headers","body","JSON","stringify","status","ok","Error","data","json","length","setBooking","error","message"],"sources":["/Users/zeynepbusesevincel/Desktop/csi2532_database_project/front-end/src/pages/DirectRenting.js"],"sourcesContent":["const handleFindBooking = async () => {\n  try {\n    const requestBody = {\n      employeeId: \"111-22-3333\", // Replace with actual employee ID\n      clientId: ssn,\n    };\n\n    console.log('Request Body:', requestBody);\n\n    const response = await fetch('http://localhost:8080/reservations/clientReservations', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(requestBody),\n    });\n\n    console.log('Response Status:', response.status);\n\n    if (!response.ok) {\n      throw new Error('Failed to fetch booking');\n    }\n\n    const data = await response.json();\n    console.log('Booking data:', data);\n\n    if (data.length > 0) {\n      setBooking(data[0]);\n      console.log('Booking found:', data[0]);\n    } else {\n      setBooking(null);\n      console.log('No booking found for that SSN.');\n    }\n  } catch (error) {\n    console.error('Error fetching booking:', error.message);\n  }\n};\n"],"mappings":"AAAA,MAAMA,iBAAiB,GAAG,MAAAA,CAAA,KAAY;EACpC,IAAI;IACF,MAAMC,WAAW,GAAG;MAClBC,UAAU,EAAE,aAAa;MAAE;MAC3BC,QAAQ,EAAEC;IACZ,CAAC;IAEDC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEL,WAAW,CAAC;IAEzC,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,uDAAuD,EAAE;MACpFC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,WAAW;IAClC,CAAC,CAAC;IAEFI,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEC,QAAQ,CAACO,MAAM,CAAC;IAEhD,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;IAC5C;IAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;IAClCb,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEW,IAAI,CAAC;IAElC,IAAIA,IAAI,CAACE,MAAM,GAAG,CAAC,EAAE;MACnBC,UAAU,CAACH,IAAI,CAAC,CAAC,CAAC,CAAC;MACnBZ,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEW,IAAI,CAAC,CAAC,CAAC,CAAC;IACxC,CAAC,MAAM;MACLG,UAAU,CAAC,IAAI,CAAC;MAChBf,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;IAC/C;EACF,CAAC,CAAC,OAAOe,KAAK,EAAE;IACdhB,OAAO,CAACgB,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAACC,OAAO,CAAC;EACzD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}